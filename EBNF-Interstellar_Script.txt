program         = { statement } ;

statement       = manifest_statement
                | adjust_statement
                | distort_statement
                | fallback_statement
                | loop_horizon_statement
                | emit_statement
                | disintegrate_statement
                ;

manifest_statement = "manifest" identifier "with" expression ;

adjust_statement   = "adjust" identifier "by" expression ;

distort_statement  = "distort" expression "beyond" expression block "end_distort" ;

fallback_statement = "fallback" block ;

loop_horizon_statement = "loop_horizon" identifier "below" expression block "end_loop" ;

emit_statement     = "emit" string ;

disintegrate_statement = "disintegrate" identifier ;

temporal_block =  ("past"|"now"|"future") block;

block            = "{" { statement } "}" ;

expression       = term { operator term } ;

term             = identifier | number ;

operator         = "+" | "-" | "*" | "/" ;

identifier       = letter { letter | digit | "_" } ;

number           = digit { digit } ;

string           = "\"" { character } "\"" ;

letter           = "a" | "b" | ... | "z" | "A" | "B" | ... | "Z" ;

digit            = "0" | "1" | ... | "9" ;

character        = any printable character except "\"" ;
